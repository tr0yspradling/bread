name: Default
run-name: >-
  CI - ${{ github.head_ref || github.ref_name }}

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - main
jobs:
  build:
    if: (github.event_name != 'pull_request' && ! github.event.pull_request.head.repo.fork) || (github.event_name == 'pull_request' && (github.event.pull_request.head.repo.fork || github.actor == 'dependabot[bot]'))
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
      - name: Cache external
        uses: actions/cache@v4
        with:
          path: ${{ steps.strings.outputs.build-output-dir }}/external
          key: ${{ runner.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}-external-${{ hashFiles('external/**') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}-external-
      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}
      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: ${{ steps.strings.outputs.build-output-dir }}

  test:
    if: (github.event_name != 'pull_request' && ! github.event.pull_request.head.repo.fork) || (github.event_name == 'pull_request' && (github.event.pull_request.head.repo.fork || startsWith(github.head_ref, 'dependabot/')))
    name: Unit Tests
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
      - name: Cache external
        uses: actions/cache@v4
        with:
          path: ${{ steps.strings.outputs.build-output-dir }}/external
          key: ${{ runner.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}-external-${{ hashFiles('external/**') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}-external-
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: ${{ steps.strings.outputs.build-output-dir }}
      - name: Fix test permissions
        if: runner.os != 'Windows'
        run: chmod +x ${{ steps.strings.outputs.build-output-dir }}/tests/*_test
      - name: Run tests
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

  docs:
    if: (github.event_name != 'pull_request' && ! github.event.pull_request.head.repo.fork) || (github.event_name == 'pull_request' && (github.event.pull_request.head.repo.fork || startsWith(github.head_ref, 'dependabot/')))
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Run Sphinx
        run: ./docs/update_docs.sh
